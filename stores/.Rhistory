births <- births %>% mutate(SIT_PARTO = ifelse(SIT_PARTO == 9, NA, SIT_PARTO))
births <- births %>% mutate(hospital = ifelse(SIT_PARTO == 1,1,0))
# Prematuro
births <- births %>% mutate(T_GES = ifelse(T_GES == 9 | T_GES == 6, NA, T_GES))
births <- births %>% mutate(prematuro = ifelse(T_GES == 1 |
T_GES == 2 |
T_GES == 3,1,0))
# Num consultas prenatales
births <- births %>% mutate(n_consultas = ifelse(NUMCONSUL == 99, NA, NUMCONSUL))
# APGAR1 APGAR2
births <- births %>% mutate(APGAR1 = ifelse(APGAR1 == 99, NA, APGAR1))
births <- births %>% mutate(APGAR2 = ifelse(APGAR2 == 99, NA, APGAR2))
# Identidad etnica (factor)
births <- births %>% mutate(IDPERTET = ifelse(IDPERTET == 9, NA, IDPERTET))
births$id_etnica <- as.factor(births$IDPERTET)
# Edad Madre (factor)
births <- births %>% mutate(EDAD_MADRE = ifelse(EDAD_MADRE == 99, NA, EDAD_MADRE))
# Madre casada
births <- births %>% mutate(EST_CIVM = ifelse(EST_CIVM == 9, NA, EST_CIVM))
births <- births %>% mutate(m_casada = ifelse(EST_CIVM == 6, 1, 0))
# Ultimo anio escolar alcanzado por la madre y padre
births <- births %>% mutate(ULTCURMAD = ifelse(ULTCURMAD == 99, NA, ULTCURMAD))
p1 = "[:digit:]+"
births <- births %>%
mutate(m_anios_colegio = str_extract(string = births$ULTCURMAD,pattern = p1))
births$m_anios_colegio <- as.numeric(births$m_anios_colegio)
births <- births %>% mutate(ULTCURPAD = ifelse(ULTCURPAD == 99, NA, ULTCURPAD))
births <- births %>%
mutate(p_anios_colegio = str_extract(string = births$ULTCURPAD,pattern = p1))
births$p_anios_colegio <- as.numeric(births$p_anios_colegio)
# Num hijos
births <- births %>%
mutate(n_hijos = str_extract(string = births$N_HIJOSV,pattern = p1))
births$n_hijos <- as.numeric(births$n_hijos)
# Nun embarazos
births <- births %>% mutate(n_emb = N_EMB)
# La madre esta en el regimen contributivo
births <- births %>% mutate(m_reg_contribu = ifelse(SEG_SOCIAL == 1, 1, 0))
# crear identificados
births <- births %>% select(bajo_peso,
hospital,
prematuro,
id_etnica,
m_casada,
m_anios_colegio,
p_anios_colegio,
n_hijos,
n_emb,
m_reg_contribu)
# Eliminar NAs en varianle dependiente
births <- births %>% drop_na()
# Crear identificador
births <- births %>% mutate(id = 1:1119514)
# Separar Test y Train set: 80/20 (895,611 / 221,902)
set.seed(10101)
train_sample <- sample(1119514, 895611)
train_set <- births[train_sample, ]
test_set <- births[-train_sample, ]
test_set <- test_set %>% select(-bajo_peso)
# XG BOOST
#install.packages('xgboost')     # for fitting the xgboost model
#install.packages('caret')       # for general data preparation and model fitting
#install.packages('e1071')
library(xgboost)
require(xgboost)
library(caret)
library(e1071)
# Convertir en matriz
colSums(is.na(train_set))
train_set_y <- train_set %>% select(bajo_peso)
train_set <- train_set %>% select(-bajo_peso)
#train_set_y <- as.matrix(train_set_y)
train_set_mtx <- as.matrix(train_set)
train_set_y <- as.matrix(train_set_y)
# Entrega Final
rm(list=ls())
setwd("C:/Users/USER/OneDrive - Universidad de los Andes/Escritorio/BigData/PS1/Entrega-Final/stores/")
library(tidyverse)
births <- read_csv("microdata_nacimientos.csv")
# Limpieza de variables:
# Bajo peso al nacer var dependiente
births <- births %>% mutate(PESO_NAC = ifelse(PESO_NAC == 9, NA, PESO_NAC))
births <- births %>% mutate(bajo_peso = ifelse(PESO_NAC == 1 |
PESO_NAC == 2 |
PESO_NAC == 3 |
PESO_NAC == 4,1,0))
table(is.na(births$IDPERTET)) #12,6K NAS
# Nacio en hospital
births <- births %>% mutate(SIT_PARTO = ifelse(SIT_PARTO == 9, NA, SIT_PARTO))
births <- births %>% mutate(hospital = ifelse(SIT_PARTO == 1,1,0))
# Prematuro
births <- births %>% mutate(T_GES = ifelse(T_GES == 9 | T_GES == 6, NA, T_GES))
births <- births %>% mutate(prematuro = ifelse(T_GES == 1 |
T_GES == 2 |
T_GES == 3,1,0))
# Num consultas prenatales
births <- births %>% mutate(n_consultas = ifelse(NUMCONSUL == 99, NA, NUMCONSUL))
# APGAR1 APGAR2
births <- births %>% mutate(APGAR1 = ifelse(APGAR1 == 99, NA, APGAR1))
births <- births %>% mutate(APGAR2 = ifelse(APGAR2 == 99, NA, APGAR2))
# Identidad etnica (factor)
births <- births %>% mutate(IDPERTET = ifelse(IDPERTET == 9, NA, IDPERTET))
births$id_etnica <- as.factor(births$IDPERTET)
# Edad Madre (factor)
births <- births %>% mutate(EDAD_MADRE = ifelse(EDAD_MADRE == 99, NA, EDAD_MADRE))
# Madre casada
births <- births %>% mutate(EST_CIVM = ifelse(EST_CIVM == 9, NA, EST_CIVM))
births <- births %>% mutate(m_casada = ifelse(EST_CIVM == 6, 1, 0))
# Ultimo anio escolar alcanzado por la madre y padre
births <- births %>% mutate(ULTCURMAD = ifelse(ULTCURMAD == 99, NA, ULTCURMAD))
p1 = "[:digit:]+"
births <- births %>%
mutate(m_anios_colegio = str_extract(string = births$ULTCURMAD,pattern = p1))
births$m_anios_colegio <- as.numeric(births$m_anios_colegio)
births <- births %>% mutate(ULTCURPAD = ifelse(ULTCURPAD == 99, NA, ULTCURPAD))
births <- births %>%
mutate(p_anios_colegio = str_extract(string = births$ULTCURPAD,pattern = p1))
births$p_anios_colegio <- as.numeric(births$p_anios_colegio)
# Num hijos
births <- births %>%
mutate(n_hijos = str_extract(string = births$N_HIJOSV,pattern = p1))
births$n_hijos <- as.numeric(births$n_hijos)
# Nun embarazos
births <- births %>% mutate(n_emb = N_EMB)
# La madre esta en el regimen contributivo
births <- births %>% mutate(m_reg_contribu = ifelse(SEG_SOCIAL == 1, 1, 0))
# crear identificados
births <- births %>% select(bajo_peso,
hospital,
prematuro,
id_etnica,
m_casada,
m_anios_colegio,
p_anios_colegio,
n_hijos,
n_emb,
m_reg_contribu)
# Eliminar NAs en varianle dependiente
births <- births %>% drop_na()
# Crear identificador
births <- births %>% mutate(id = 1:1119514)
# Separar Test y Train set: 80/20 (895,611 / 221,902)
set.seed(10101)
train_sample <- sample(1119514, 895611)
train_set <- births[train_sample, ]
test_set <- births[-train_sample, ]
test_set <- test_set %>% select(-bajo_peso)
# XG BOOST
#install.packages('xgboost')     # for fitting the xgboost model
#install.packages('caret')       # for general data preparation and model fitting
#install.packages('e1071')
library(xgboost)
require(xgboost)
library(caret)
library(e1071)
# Convertir en matriz
colSums(is.na(train_set))
train_set_y <- train_set %>% select(bajo_peso)
train_set <- train_set %>% select(-bajo_peso)
train_set_y_mtx <- as.matrix(train_set_y)
train_set_mtx <- as.matrix(train_set)
# Entrega Final
rm(list=ls())
setwd("C:/Users/USER/OneDrive - Universidad de los Andes/Escritorio/BigData/PS1/Entrega-Final/stores/")
library(tidyverse)
births <- read_csv("microdata_nacimientos.csv")
# Limpieza de variables:
# Bajo peso al nacer var dependiente
births <- births %>% mutate(PESO_NAC = ifelse(PESO_NAC == 9, NA, PESO_NAC))
births <- births %>% mutate(bajo_peso = ifelse(PESO_NAC == 1 |
PESO_NAC == 2 |
PESO_NAC == 3 |
PESO_NAC == 4,1,0))
table(is.na(births$IDPERTET)) #12,6K NAS
# Nacio en hospital
births <- births %>% mutate(SIT_PARTO = ifelse(SIT_PARTO == 9, NA, SIT_PARTO))
births <- births %>% mutate(hospital = ifelse(SIT_PARTO == 1,1,0))
# Prematuro
births <- births %>% mutate(T_GES = ifelse(T_GES == 9 | T_GES == 6, NA, T_GES))
births <- births %>% mutate(prematuro = ifelse(T_GES == 1 |
T_GES == 2 |
T_GES == 3,1,0))
# Num consultas prenatales
births <- births %>% mutate(n_consultas = ifelse(NUMCONSUL == 99, NA, NUMCONSUL))
# APGAR1 APGAR2
births <- births %>% mutate(APGAR1 = ifelse(APGAR1 == 99, NA, APGAR1))
births <- births %>% mutate(APGAR2 = ifelse(APGAR2 == 99, NA, APGAR2))
# Identidad etnica (factor)
births <- births %>% mutate(IDPERTET = ifelse(IDPERTET == 9, NA, IDPERTET))
births$id_etnica <- as.factor(births$IDPERTET)
# Edad Madre (factor)
births <- births %>% mutate(EDAD_MADRE = ifelse(EDAD_MADRE == 99, NA, EDAD_MADRE))
# Madre casada
births <- births %>% mutate(EST_CIVM = ifelse(EST_CIVM == 9, NA, EST_CIVM))
births <- births %>% mutate(m_casada = ifelse(EST_CIVM == 6, 1, 0))
# Ultimo anio escolar alcanzado por la madre y padre
births <- births %>% mutate(ULTCURMAD = ifelse(ULTCURMAD == 99, NA, ULTCURMAD))
p1 = "[:digit:]+"
births <- births %>%
mutate(m_anios_colegio = str_extract(string = births$ULTCURMAD,pattern = p1))
births$m_anios_colegio <- as.numeric(births$m_anios_colegio)
births <- births %>% mutate(ULTCURPAD = ifelse(ULTCURPAD == 99, NA, ULTCURPAD))
births <- births %>%
mutate(p_anios_colegio = str_extract(string = births$ULTCURPAD,pattern = p1))
births$p_anios_colegio <- as.numeric(births$p_anios_colegio)
# Num hijos
births <- births %>%
mutate(n_hijos = str_extract(string = births$N_HIJOSV,pattern = p1))
births$n_hijos <- as.numeric(births$n_hijos)
# Nun embarazos
births <- births %>% mutate(n_emb = N_EMB)
# La madre esta en el regimen contributivo
births <- births %>% mutate(m_reg_contribu = ifelse(SEG_SOCIAL == 1, 1, 0))
# crear identificados
births <- births %>% select(bajo_peso,
hospital,
prematuro,
id_etnica,
m_casada,
m_anios_colegio,
p_anios_colegio,
n_hijos,
n_emb,
m_reg_contribu)
# Eliminar NAs en varianle dependiente
births <- births %>% drop_na()
# Crear identificador
births <- births %>% mutate(id = 1:1119514)
# Separar Test y Train set: 80/20 (895,611 / 221,902)
set.seed(10101)
train_sample <- sample(1119514, 895611)
train_set <- births[train_sample, ]
test_set <- births[-train_sample, ]
test_set <- test_set %>% select(-bajo_peso)
# XG BOOST
#install.packages('xgboost')     # for fitting the xgboost model
#install.packages('caret')       # for general data preparation and model fitting
#install.packages('e1071')
library(xgboost)
require(xgboost)
library(caret)
library(e1071)
# Convertir en matriz
colSums(is.na(train_set))
#train_set_y <- train_set %>% select(bajo_peso)
#train_set <- train_set %>% select(-bajo_peso)
#train_set_y_mtx <- as.matrix(train_set_y)
train_set_mtx <- as.matrix(train_set)
View(train_set)
View(test_set)
View(test_set)
xgb_1 <- xgboost(data = train_set_mtx[,c(2:10)], label = train_set_mtx$bajo_peso, max.depth = 6, eta = 0.5, nrounds = 100, objective = "reg:squarederror")
xgb_1 <- xgboost(data = train_set_mtx[,c(2:10)], label = train_set$bajo_peso, max.depth = 6, eta = 0.5, nrounds = 100, objective = "reg:squarederror")
View(train_set_mtx)
births <- as.numeric(births)
# Entrega Final
rm(list=ls())
setwd("C:/Users/USER/OneDrive - Universidad de los Andes/Escritorio/BigData/PS1/Entrega-Final/stores/")
library(tidyverse)
births <- read_csv("microdata_nacimientos.csv")
# Limpieza de variables:
# Bajo peso al nacer var dependiente
births <- births %>% mutate(PESO_NAC = ifelse(PESO_NAC == 9, NA, PESO_NAC))
births <- births %>% mutate(bajo_peso = ifelse(PESO_NAC == 1 |
PESO_NAC == 2 |
PESO_NAC == 3 |
PESO_NAC == 4,1,0))
table(is.na(births$IDPERTET)) #12,6K NAS
# Nacio en hospital
births <- births %>% mutate(SIT_PARTO = ifelse(SIT_PARTO == 9, NA, SIT_PARTO))
births <- births %>% mutate(hospital = ifelse(SIT_PARTO == 1,1,0))
# Prematuro
births <- births %>% mutate(T_GES = ifelse(T_GES == 9 | T_GES == 6, NA, T_GES))
births <- births %>% mutate(prematuro = ifelse(T_GES == 1 |
T_GES == 2 |
T_GES == 3,1,0))
# Num consultas prenatales
births <- births %>% mutate(n_consultas = ifelse(NUMCONSUL == 99, NA, NUMCONSUL))
# APGAR1 APGAR2
births <- births %>% mutate(APGAR1 = ifelse(APGAR1 == 99, NA, APGAR1))
births <- births %>% mutate(APGAR2 = ifelse(APGAR2 == 99, NA, APGAR2))
# Identidad etnica (factor)
births <- births %>% mutate(IDPERTET = ifelse(IDPERTET == 9, NA, IDPERTET))
#births$id_etnica <- as.factor(births$IDPERTET)
# Edad Madre (factor)
births <- births %>% mutate(EDAD_MADRE = ifelse(EDAD_MADRE == 99, NA, EDAD_MADRE))
# Madre casada
births <- births %>% mutate(EST_CIVM = ifelse(EST_CIVM == 9, NA, EST_CIVM))
births <- births %>% mutate(m_casada = ifelse(EST_CIVM == 6, 1, 0))
# Ultimo anio escolar alcanzado por la madre y padre
births <- births %>% mutate(ULTCURMAD = ifelse(ULTCURMAD == 99, NA, ULTCURMAD))
p1 = "[:digit:]+"
births <- births %>%
mutate(m_anios_colegio = str_extract(string = births$ULTCURMAD,pattern = p1))
births$m_anios_colegio <- as.numeric(births$m_anios_colegio)
births <- births %>% mutate(ULTCURPAD = ifelse(ULTCURPAD == 99, NA, ULTCURPAD))
births <- births %>%
mutate(p_anios_colegio = str_extract(string = births$ULTCURPAD,pattern = p1))
births$p_anios_colegio <- as.numeric(births$p_anios_colegio)
# Num hijos
births <- births %>%
mutate(n_hijos = str_extract(string = births$N_HIJOSV,pattern = p1))
births$n_hijos <- as.numeric(births$n_hijos)
# Nun embarazos
births <- births %>% mutate(n_emb = N_EMB)
# La madre esta en el regimen contributivo
births <- births %>% mutate(m_reg_contribu = ifelse(SEG_SOCIAL == 1, 1, 0))
# crear identificados
births <- births %>% select(bajo_peso,
hospital,
prematuro,
id_etnica,
m_casada,
m_anios_colegio,
p_anios_colegio,
n_hijos,
n_emb,
m_reg_contribu)
# Entrega Final
rm(list=ls())
setwd("C:/Users/USER/OneDrive - Universidad de los Andes/Escritorio/BigData/PS1/Entrega-Final/stores/")
library(tidyverse)
births <- read_csv("microdata_nacimientos.csv")
# Limpieza de variables:
# Bajo peso al nacer var dependiente
births <- births %>% mutate(PESO_NAC = ifelse(PESO_NAC == 9, NA, PESO_NAC))
births <- births %>% mutate(bajo_peso = ifelse(PESO_NAC == 1 |
PESO_NAC == 2 |
PESO_NAC == 3 |
PESO_NAC == 4,1,0))
table(is.na(births$IDPERTET)) #12,6K NAS
# Nacio en hospital
births <- births %>% mutate(SIT_PARTO = ifelse(SIT_PARTO == 9, NA, SIT_PARTO))
births <- births %>% mutate(hospital = ifelse(SIT_PARTO == 1,1,0))
# Prematuro
births <- births %>% mutate(T_GES = ifelse(T_GES == 9 | T_GES == 6, NA, T_GES))
births <- births %>% mutate(prematuro = ifelse(T_GES == 1 |
T_GES == 2 |
T_GES == 3,1,0))
# Num consultas prenatales
births <- births %>% mutate(n_consultas = ifelse(NUMCONSUL == 99, NA, NUMCONSUL))
# APGAR1 APGAR2
births <- births %>% mutate(APGAR1 = ifelse(APGAR1 == 99, NA, APGAR1))
births <- births %>% mutate(APGAR2 = ifelse(APGAR2 == 99, NA, APGAR2))
# Identidad etnica (factor)
births <- births %>% mutate(id_etnica = ifelse(IDPERTET == 9, NA, IDPERTET))
#births$id_etnica <- as.factor(births$IDPERTET)
# Edad Madre (factor)
births <- births %>% mutate(EDAD_MADRE = ifelse(EDAD_MADRE == 99, NA, EDAD_MADRE))
# Madre casada
births <- births %>% mutate(EST_CIVM = ifelse(EST_CIVM == 9, NA, EST_CIVM))
births <- births %>% mutate(m_casada = ifelse(EST_CIVM == 6, 1, 0))
# Ultimo anio escolar alcanzado por la madre y padre
births <- births %>% mutate(ULTCURMAD = ifelse(ULTCURMAD == 99, NA, ULTCURMAD))
p1 = "[:digit:]+"
births <- births %>%
mutate(m_anios_colegio = str_extract(string = births$ULTCURMAD,pattern = p1))
births$m_anios_colegio <- as.numeric(births$m_anios_colegio)
births <- births %>% mutate(ULTCURPAD = ifelse(ULTCURPAD == 99, NA, ULTCURPAD))
births <- births %>%
mutate(p_anios_colegio = str_extract(string = births$ULTCURPAD,pattern = p1))
births$p_anios_colegio <- as.numeric(births$p_anios_colegio)
# Num hijos
births <- births %>%
mutate(n_hijos = str_extract(string = births$N_HIJOSV,pattern = p1))
births$n_hijos <- as.numeric(births$n_hijos)
# Nun embarazos
births <- births %>% mutate(n_emb = N_EMB)
# La madre esta en el regimen contributivo
births <- births %>% mutate(m_reg_contribu = ifelse(SEG_SOCIAL == 1, 1, 0))
# crear identificados
births <- births %>% select(bajo_peso,
hospital,
prematuro,
id_etnica,
m_casada,
m_anios_colegio,
p_anios_colegio,
n_hijos,
n_emb,
m_reg_contribu)
str(births)
# Eliminar NAs en varianle dependiente
births <- births %>% drop_na()
births <- births %>% mutate(id = 1:1119514)
# Separar Test y Train set: 80/20 (895,611 / 221,902)
set.seed(10101)
train_sample <- sample(1119514, 895611)
train_set <- births[train_sample, ]
test_set <- births[-train_sample, ]
test_set <- test_set %>% select(-bajo_peso)
# Convertir en matriz
colSums(is.na(train_set))
train_set_mtx <- as.matrix(train_set)
xgb_1 <- xgboost(data = train_set_mtx[,c(2:10)], label = train_set$bajo_peso, max.depth = 6, eta = 0.5, nrounds = 100, objective = "reg:squarederror")
write.csv(births ,"births")
write.csv(test_set ,"test_set")
write.csv(train_set ,"train_set")
# Entrega Final
rm(list=ls())
setwd("C:/Users/USER/OneDrive - Universidad de los Andes/Escritorio/BigData/PS1/Entrega-Final/stores/")
library(tidyverse)
births <- read_csv("microdata_nacimientos.csv")
# Limpieza de variables:
# Bajo peso al nacer var dependiente
births <- births %>% mutate(PESO_NAC = ifelse(PESO_NAC == 9, NA, PESO_NAC))
births <- births %>% mutate(bajo_peso = ifelse(PESO_NAC == 1 |
PESO_NAC == 2 |
PESO_NAC == 3 |
PESO_NAC == 4,1,0))
table(is.na(births$IDPERTET)) #12,6K NAS
# Nacio en hospital
births <- births %>% mutate(SIT_PARTO = ifelse(SIT_PARTO == 9, NA, SIT_PARTO))
births <- births %>% mutate(hospital = ifelse(SIT_PARTO == 1,1,0))
# Prematuro
births <- births %>% mutate(T_GES = ifelse(T_GES == 9 | T_GES == 6, NA, T_GES))
births <- births %>% mutate(prematuro = ifelse(T_GES == 1 |
T_GES == 2 |
T_GES == 3,1,0))
# Num consultas prenatales
births <- births %>% mutate(n_consultas = ifelse(NUMCONSUL == 99, NA, NUMCONSUL))
# APGAR1 APGAR2
births <- births %>% mutate(APGAR1 = ifelse(APGAR1 == 99, NA, APGAR1))
births <- births %>% mutate(APGAR2 = ifelse(APGAR2 == 99, NA, APGAR2))
# Identidad etnica (factor)
births <- births %>% mutate(id_etnica = ifelse(IDPERTET == 9, NA, IDPERTET))
#births$id_etnica <- as.factor(births$IDPERTET)
# Edad Madre (factor)
births <- births %>% mutate(EDAD_MADRE = ifelse(EDAD_MADRE == 99, NA, EDAD_MADRE))
# Madre casada
births <- births %>% mutate(EST_CIVM = ifelse(EST_CIVM == 9, NA, EST_CIVM))
births <- births %>% mutate(m_casada = ifelse(EST_CIVM == 6, 1, 0))
# Ultimo anio escolar alcanzado por la madre y padre
births <- births %>% mutate(ULTCURMAD = ifelse(ULTCURMAD == 99, NA, ULTCURMAD))
p1 = "[:digit:]+"
births <- births %>%
mutate(m_anios_colegio = str_extract(string = births$ULTCURMAD,pattern = p1))
births$m_anios_colegio <- as.numeric(births$m_anios_colegio)
births <- births %>% mutate(ULTCURPAD = ifelse(ULTCURPAD == 99, NA, ULTCURPAD))
births <- births %>%
mutate(p_anios_colegio = str_extract(string = births$ULTCURPAD,pattern = p1))
births$p_anios_colegio <- as.numeric(births$p_anios_colegio)
# Num hijos
births <- births %>%
mutate(n_hijos = str_extract(string = births$N_HIJOSV,pattern = p1))
births$n_hijos <- as.numeric(births$n_hijos)
# Nun embarazos
births <- births %>% mutate(n_emb = N_EMB)
# La madre esta en el regimen contributivo
births <- births %>% mutate(m_reg_contribu = ifelse(SEG_SOCIAL == 1, 1, 0))
# crear identificados
births <- births %>% select(bajo_peso,
hospital,
prematuro,
id_etnica,
m_casada,
m_anios_colegio,
p_anios_colegio,
n_hijos,
n_emb,
m_reg_contribu)
# Eliminar NAs en varianle dependiente
births <- births %>% drop_na()
# Crear identificador
births <- births %>% mutate(id = 1:1119514)
# Separar Test y Train set: 80/20 (895,611 / 221,902)
set.seed(10101)
train_sample <- sample(1119514, 895611)
train_set <- births[train_sample, ]
test_set <- births[-train_sample, ]
test_set <- test_set %>% select(-bajo_peso)
# XG BOOST
library(xgboost)
require(xgboost)
library(caret)
library(e1071)
# Convertir en matriz
train_set_mtx <- as.matrix(train_set)
# Entrenar modelo
xgb_1 <- xgboost(data = train_set_mtx[,c(2:10)], label = train_set$bajo_peso, max.depth = 6, eta = 0.5, nrounds = 100, objective = "reg:squarederror")
write.csv(births ,"births.csv")
write.csv(test_set ,"test_set.csv")
write.csv(train_set ,"train_set.csv")
# Estadisticas descriptivas
descriptiva_1 <- table1(~ bajo_peso+hospital+prematuro+id_etnica+m_casada+
m_anios_colegio+p_anios_colegio+n_hijos+n_emb
+m_reg_contribu,
data=births, overall="Total")
library(table1)
# Estadisticas descriptivas
descriptiva_1 <- table1(~ bajo_peso+hospital+prematuro+id_etnica+m_casada+
m_anios_colegio+p_anios_colegio+n_hijos+n_emb
+m_reg_contribu,
data=births, overall="Total")
descriptiva_1
# Estadisticas descriptivas
descriptivas <- births
y <- c("bajo_peso", "hospital", "prematuro", "id_etnica", "m_casada", "m_reg_contribu")
descriptivas[y] <- lapply(descriptivas[y], factor)
descriptiva_1 <- table1(~ bajo_peso+hospital+prematuro+id_etnica+m_casada+
m_anios_colegio+p_anios_colegio+n_hijos+n_emb
+m_reg_contribu,
data=descriptivas, overall="Total")
descriptiva_1
library("ROSE")
smote <- ovun.sample(bajo_peso ~ ., train_set, method='both')
oversampled_data = smote$data
prop.table(table(oversampled_data$h_pobre)) #49% no, 50% si
View(smote)
smote
oversampled_data = train_set$smote
oversampled_data = train_set$smote
